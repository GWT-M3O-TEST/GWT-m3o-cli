{
  "components": {
    "requestBodies": {
      "AvatarGenerateRequest": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/GenerateRequest"
            }
          }
        },
        "description": "AvatarGenerateRequest"
      }
    },
    "responses": {
      "AvatarGenerateResponse": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/GenerateResponse"
            }
          }
        },
        "description": "AvatarGenerateResponse"
      },
      "MicroAPIError": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "Code": {
                  "description": "Error code",
                  "example": 500,
                  "type": "number"
                },
                "Detail": {
                  "description": "Error detail",
                  "example": "service not found",
                  "type": "string"
                },
                "Id": {
                  "description": "Error ID",
                  "type": "string"
                },
                "Status": {
                  "description": "Error status message",
                  "example": "Internal Server Error",
                  "type": "string"
                }
              },
              "title": "MicroAPIError",
              "type": "object"
            }
          }
        },
        "description": "Error from the Micro API"
      }
    },
    "schemas": {
      "GenerateRequest": {
        "properties": {
          "format": {
            "description": "encode format of avatar image, `png` or `jpeg`, default is `jpeg`",
            "type": "string"
          },
          "gender": {
            "description": "avatar's gender, `male` or `female`, default is `male`",
            "type": "string"
          },
          "upload": {
            "description": "if upload to m3o CDN, default is `false`\n if update = true, then it'll return the CDN url",
            "type": "boolean"
          },
          "username": {
            "description": "avatar's username, unique username will generates the unique avatar;\n if username == \"\", will generate a random avatar in every request\n if upload == true, username will be used as CDN filename rather than a random uuid string",
            "type": "string"
          }
        },
        "title": "GenerateRequest",
        "type": "object"
      },
      "GenerateResponse": {
        "properties": {
          "base64": {
            "description": "base64encode string of the avatar image",
            "type": "string"
          },
          "url": {
            "description": "Micro's CDN url of the avatar image",
            "type": "string"
          }
        },
        "title": "GenerateResponse",
        "type": "object"
      }
    },
    "securitySchemes": {
      "M3OAPIToken": {
        "bearerFormat": "token",
        "description": "M3O API token",
        "scheme": "bearer",
        "type": "http"
      }
    }
  },
  "info": {
    "description": "Generated by protoc-gen-openapi",
    "title": "Avatar",
    "version": "1",
    "x-logo": {
      "altText": "M3O logo",
      "backgroundColor": "#000000",
      "url": "https://raw.githubusercontent.com/m3o/m3o/main/images/logo.png"
    }
  },
  "openapi": "3.0.0",
  "paths": {
    "/avatar/Avatar/Generate": {
      "parameters": [
        {
          "in": "header",
          "name": "Micro-Namespace",
          "required": true,
          "schema": {
            "default": "micro",
            "type": "string"
          }
        }
      ],
      "post": {
        "requestBody": {
          "$ref": "#/components/requestBodies/AvatarGenerateRequest"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/AvatarGenerateResponse"
          },
          "default": {
            "$ref": "#/components/responses/MicroAPIError"
          }
        },
        "security": [
          {
            "MicroAPIToken": []
          }
        ],
        "summary": "Avatar.Generate(GenerateRequest)"
      }
    }
  },
  "servers": [
    {
      "url": "https://api.m3o.com/v1",
      "description": "M3O platform"
    }
  ]
}